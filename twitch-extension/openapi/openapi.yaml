openapi: 3.0.1
info:
  title: Twitch Extension Backend Service API
  version: 1.0.0
  description: API for the Twitch Extension Backend Service, proxying requests to the internal platform.

servers:
  - url: http://localhost:8789
    description: Local development server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Error:
      type: object
      properties:
        message:
          type: string

# apply security to all endpoints
security:
  - bearerAuth: []

paths:
  /direct-state:
    get:
      summary: Bypass pubsub to get EBS state directly
      operationId: getDirectState
      responses:
        200:
          description: State retrieved
          content:
            application/json:
              schema:
                type: object
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        500:
          description: Internal error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /unclaim:
    put:
      summary: Unclaim control of the robot
      description: |
        This endpoint is used to release claim on the robot
      operationId: unclaim
      responses:
        202:
          description: Control unclaimed
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        500:
          description: Internal error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /claim:
    put:
      summary: Claim control of the robot
      description: |
        This endpoint is used to claim control of the robot. Only one user can control the robot at a time.
        This should be called periodically to renew the claim.
      operationId: claim
      responses:
        202:
          description: Control claimed
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        500:
          description: Internal error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /collect:
    post:
      summary: Collect from a vial
      operationId: collectFromVial
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: The ID of the vial to collect
      responses:
        202:
          description: Collection request accepted
        400:
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        500:
          description: Internal error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /dispense:
    post:
      summary: Dispense from pipette
      operationId: dispense
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                x:
                  type: number
                  format: float
                  description: The x-coordinate to move to
                y:
                  type: number
                  format: float
                  description: The y-coordinate to move to
      responses:
        202:
          description: Dispense request accepted
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        500:
          description: Internal error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /goto:
    put:
      summary: Move the pipette tip to a specific position
      operationId: goToPosition
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                x:
                  type: number
                  format: float
                  description: The x-coordinate to move to
                y:
                  type: number
                  format: float
                  description: The y-coordinate to move to
      responses:
        202:
          description: Movement request accepted
        400:
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        500:
          description: Internal error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
